// import { useEffect, useState } from "react";
// import { getDocs, doc, getDoc, collection, query } from "firebase/firestore";
// import { db } from "../../firebaseConfig";
// import "../../styles/CheckObat.scss";
// import Swal from "sweetalert2";
// import withReactContent from "sweetalert2-react-content";

// const MySwal = withReactContent(Swal);

// function CheckTransaction() {
//   const [instanceName, setInstanceName] = useState("");
//   const [selectedDocument, setSelectedDocument] = useState("");
//   const [selectedBatch, setSelectedBatch] = useState("");
//   const [instanceData, setInstanceData] = useState(null);
//   const [obatData, setObatData] = useState(null);
//   const [cpotbData, setCpotbData] = useState(null);
//   const [cdobData, setCdobData] = useState(null);
//   const [txCpotbData, setTxCpotbData] = useState(null);
//   const [txCdobData, setTxCdobData] = useState(null);
//   const [txObatData, setTxObatData] = useState(null);
//   const [batchData, setBatchData] = useState([]);
//   const [obatName, setObatName] = useState([]);
//   const [selectedObatDetails, setSelectedObatDetails] = useState(null);
//   const [selectedBatchDetails, setSelectedBatchDetails] = useState(null);

//   useEffect(() => {
//     document.title = "Riwayat Hash Transaksi";
//   }, []);

//   const options = {
//     year: "numeric",
//     month: "long",
//     day: "numeric",
//     hour: "2-digit",
//     minute: "2-digit",
//     timeZoneName: "short",
//   };

//   const formatTimestamp = (timestamp) => {
//     if (!timestamp) return "Tidak Tersedia";
//     return new Date(Number(timestamp)).toLocaleDateString("id-ID", options);
//   };

//   const showAlert = (title, text, icon) => {
//     MySwal.fire({
//       title,
//       text,
//       icon,
//       confirmButtonText: "OK",
//     });
//   };

//   const fetchDocuments = async () => {

//     MySwal.fire({
//       title:"Mengakses data dari database 🍴",
//       text:"Harap tunggu.",
//       icon: 'info',
//       showCancelButton: false,
//       showConfirmButton: false,
//       allowOutsideClick: false,
//     })

//     try {
//       if (!instanceName.trim()) {
//         showAlert("Error", "Harap masukkan nama pabrik yang sesuai.", "error");
//         return;
//       }

//       console.log(instanceName);

//       const querySnapshot = doc(db, "company_data", instanceName);
//       const instanceSnapshot = await getDoc(querySnapshot);
//       const selectedInstance = instanceSnapshot.data();

//       console.log(selectedInstance);

//       if (selectedInstance?.role === 'Pabrik') {
        
//         const querySnapshotObat = doc(db, "obat_data", instanceName);
//         const obatSnapshot = await getDoc(querySnapshotObat);
//         const selectedObat = obatSnapshot.data();

//         const querySnapshotCpotb = doc(db, "cpotb_list", instanceName);
//         const cpotbSnapshot = await getDoc(querySnapshotCpotb);
//         const selectedCpotb = cpotbSnapshot.data();

//         const obatNameList = selectedObat ? Object.keys(selectedObat) : [];

//         console.log(obatNameList);
//         console.log(selectedCpotb);
//         console.log(selectedObat);

//         setInstanceData(selectedInstance);
//         setCpotbData(selectedObat[obatNameList[0]].jenisSediaan);
//         // setCdobData(selectedObat[obatNameList[0]].tipeObat)
//         setObatData(selectedObat);
//         setObatName(obatNameList);
//         fetchTxCpotbData(selectedObat[obatNameList[0]].jenisSediaan);

//         if (obatNameList.length > 0) {
//           const firstObat = obatNameList[0];
//           setSelectedDocument(firstObat);
//           setSelectedObatDetails(selectedObat[firstObat]);
//           fetchBatchData(firstObat, selectedObat);
//           fetchTxObatData(firstObat);

//           MySwal.close()
//         }
//         // Fetch CPOTB transaction data
//       } else if (selectedInstance?.role === 'PBF') {
//         const querySnapshotCdob = doc(db, "cdob_list", instanceName);
//         const cdobSnapshot = await getDoc(querySnapshotCdob);
//         const selectedCdob = cdobSnapshot.data();

//         console.log(selectedCdob);
//         setInstanceData(selectedInstance);
//         setCdobData(selectedCdob);
//         fetchTxCdobData('Obat Lain');
//         MySwal.close()
//       }

//       if (!selectedInstance) {
//         showAlert("Tidak ada data", `Tidak ada data yang ditemukan untuk "${instanceName}".`, "warning");
//       }
//     } catch (error) {
//       console.error("Error fetching data:", error);
//       showAlert("Error", "Gagal mengakses data transaksi.", "error");
//     }
//   };

//   const fetchBatchData = (obatName, obatDataSource = obatData) => {
//     try {
//       if (!obatDataSource || !obatDataSource[obatName]) {
//         setBatchData([]);
//         return;
//       }

//       const obatInfo = obatDataSource[obatName];
//       const batchArray = Object.keys(obatInfo)
//         .filter((key) => key.startsWith("batch_"))
//         .map((batchName) => {
//           return {
//             batchName: batchName,
//             batchData: obatInfo[batchName],
//           };
//         });

//       console.log(batchArray);
//       setBatchData(batchArray);
//       setSelectedObatDetails(obatInfo);

//       if (batchArray.length === 0) {
//         showAlert("Tidak ada data", `Tidak ada data batch yang ditemukan untuk "${obatName}".`, "warning");
//       }
//     } catch (error) {
//       console.error("Error fetching data:", error);
//       showAlert("Error", "Gagal mengakses data transaksi.", "error");
//     }
//   };

//   const fetchBatchDetails = (batchName) => {
//     try {
//       if (!batchData) return;
      
//       const selectedBatchData = batchData.find(batch => batch.batchName === batchName);
//       setSelectedBatchDetails(selectedBatchData?.batchData || null);
//       setSelectedBatch(batchName);
//     } catch (error) {
//       console.error("Error fetching batch details:", error);
//       showAlert("Error", "Gagal mengakses detail batch.", "error");
//     }
//   };

//   const fetchTxObatData = async (obatName) => {
//     try {
//       const querySnapshotTxObat = doc(db, "transaction_hash", `obat_${obatName}_${instanceName}`);
//       const txSnapshot = await getDoc(querySnapshotTxObat);
//       const selectedTx = txSnapshot.data();

//       console.log(selectedTx);
//       setTxObatData(selectedTx);

//       if (!selectedTx) {
//         showAlert("Tidak ada data", `Tidak ada data transaksi yang ditemukan untuk "${obatName}".`, "warning");
//       }
//     } catch (error) {
//       console.error("Error fetching data:", error);
//       showAlert("Error", "Gagal mengakses data transaksi.", "error");
//     }
//   };

//   const fetchTxCpotbData = async (jenisSediaan) => {
//     try {
//       const querySnapshotTxObat = doc(db, "transaction_hash", `pengajuan_cpotb_${instanceName}`);
//       const txSnapshot = await getDoc(querySnapshotTxObat);
//       const selectedTx = txSnapshot.data();

//       console.log(selectedTx?.[jenisSediaan]);
//       setTxCpotbData(selectedTx?.[jenisSediaan]);

//       if (!selectedTx?.[jenisSediaan]) {
//         showAlert("Tidak ada data", `Tidak ada data transaksi yang ditemukan untuk CPOTB "${jenisSediaan}".`, "warning");
//       }
//     } catch (error) {
//       console.error("Error fetching data:", error);
//       showAlert("Error", "Gagal mengakses data transaksi.", "error");
//     }
//   };

//   const fetchTxCdobData = async (tipePermohonan) => {
//     try {
//       const querySnapshotTxObat = doc(db, "transaction_hash", `pengajuan_cdob_${instanceName}`);
//       const txSnapshot = await getDoc(querySnapshotTxObat);
//       const selectedTx = txSnapshot.data();

//       console.log(selectedTx?.[tipePermohonan]);
//       setTxCdobData(selectedTx?.[tipePermohonan]);

//       if (!selectedTx?.[tipePermohonan]) {
//         showAlert("Tidak ada data", `Tidak ada data transaksi yang ditemukan untuk CDOB "${tipePermohonan}".`, "warning");
//       }
//     } catch (error) {
//       console.error("Error fetching data:", error);
//       showAlert("Error", "Gagal mengakses data transaksi.", "error");
//     }
//   };

//   const renderTable = (data, title) => {
//     if (!data) {
//       return (
//         <div>
//           <h4>{title}</h4>
//           <table>
//             <thead>
//               <tr>
//                 <th>Aktivitas</th>
//                 <th>Tanggal</th>
//                 <th>Hash</th>
//                 <th>Aksi</th>
//               </tr>
//             </thead>
//             <tbody>
//               <tr>
//                 <td colSpan="4" style={{ textAlign: "center" }}>
//                   Data belum tersedia
//                 </td>
//               </tr>
//             </tbody>
//           </table>
//         </div>
//       );
//     }

//     const sortedData = Object.entries(data).sort(
//       ([, a], [, b]) => Number(a.timestamp || 0) - Number(b.timestamp || 0)
//     );

//     return (
//       <div>
//         <h4>{title}</h4>
//         <table>
//           <thead>
//             <tr>
//               <th>Aktivitas</th>
//               <th>Tanggal</th>
//               <th>Hash</th>
//               <th>Aksi</th>
//             </tr>
//           </thead>
//           <tbody>
//             {sortedData.length === 0 ? (
//               <tr>
//                 <td colSpan="4" style={{ textAlign: "center" }}>
//                   Data belum tersedia
//                 </td>
//               </tr>
//             ) : (
//               sortedData.map(([key, value]) => (
//                 <tr key={key}>
//                   <td>{key}</td>
//                   <td>
//                     {value.timestamp !== undefined
//                       ? formatTimestamp(value.timestamp)
//                       : "Data tidak tersedia"}
//                   </td>
//                   <td>{value.hash || "Data tidak tersedia"}</td>
//                   <td>
//                     <button 
//                       className="copy"
//                       onClick={() =>
//                         navigator.clipboard.writeText(value.hash || "Data tidak tersedia")
//                       }
//                     >
//                       Copy Hash
//                     </button>
//                     <button 
//                       className="view"
//                       onClick={() =>
//                         value.hash &&
//                         window.open(`https://etherscan.io/tx/${value.hash}`, "_blank")
//                       }
//                     >
//                       Lihat di Etherscan
//                     </button>
//                   </td>
//                 </tr>
//               ))
//             )}
//           </tbody>
//         </table>
//       </div>
//     );
//   };

//   const renderBatchTable = (batchData) => {
//     if (!batchData) {
//       return (
//         <div>
//           <h4>Detail Batch</h4>
//           <table>
//             <thead>
//               <tr>
//                 <th>Aktivitas</th>
//                 <th>Timestamp</th>
//                 <th>Hash</th>
//                 <th>Aksi</th>
//               </tr>
//             </thead>
//             <tbody>
//               <tr>
//                 <td colSpan="4" style={{ textAlign: "center" }}>
//                   Data belum tersedia
//                 </td>
//               </tr>
//             </tbody>
//           </table>
//         </div>
//       );
//     }

//     const keyDisplayMap = {
//       batchCreatedHash: "Batch Dibuat",
//       OrderRetCreatedHash: "Pengajuan Order dari Retailer",
//       orderRetSendHash: "Pengiriman dari Retailer",
//       orderRetCompletedHash: "Penyelesaian Order Retailer",
//       OrderPbfCreatedHash: "Pengajuan Order dari PBF",
//       OrderPbfSendHash: "Pengiriman dari PBF",
//       OrderPbfCompletedHash: "Penyelesaian Order PBF",
//     };

//     // Get all hash fields and their corresponding timestamps
//     const hashEntries = Object.entries(batchData)
//       .filter(([key]) => key.includes('Hash'))
//       .map(([hashKey, hashValue]) => {
//         const timestampKey = hashKey.replace('Hash', 'Timestamp');
//         return {
//           key: hashKey,
//           hash: hashValue,
//           timestamp: batchData[timestampKey],
//           displayName: keyDisplayMap[hashKey] || hashKey
//         };
//       })
//       .sort((a, b) => Number(a.timestamp || 0) - Number(b.timestamp || 0));

//     return (
//       <div>
//         <h4>Detail Batch</h4>
//         <table>
//           <thead>
//             <tr>
//               <th>Aktivitas</th>
//               <th>Timestamp</th>
//               <th>Hash</th>
//               <th>Aksi</th>
//             </tr>
//           </thead>
//           <tbody>
//             {hashEntries.length === 0 ? (
//               <tr>
//                 <td colSpan="4" style={{ textAlign: "center" }}>
//                   Data belum tersedia
//                 </td>
//               </tr>
//             ) : (
//               hashEntries.map((entry) => (
//                 <tr key={entry.key}>
//                   <td>{entry.displayName}</td>
//                   <td>{formatTimestamp(entry.timestamp)}</td>
//                   <td>{entry.hash || "Data tidak tersedia"}</td>
//                   <td>
//                     <button 
//                       className="copy" 
//                       onClick={() => navigator.clipboard.writeText(entry.hash || "Data tidak tersedia")}
//                     >
//                       Copy Hash
//                     </button>
//                     <button 
//                       className="view"
//                       onClick={() =>
//                         entry.hash && window.open(`https://etherscan.io/tx/${entry.hash}`, "_blank")
//                       }
//                     >
//                       Lihat di Etherscan
//                     </button>
//                   </td>
//                 </tr>
//               ))
//             )}
//           </tbody>
//         </table>
//         <div className="batch-summary">
//           <p>
//             <b>Batch Quantity:</b> {batchData.quantity || "Data tidak tersedia"} Obat
//           </p>
//           <p>
//             <b>Nama Instansi PBF:</b> {batchData.pbf || "Data tidak tersedia"}
//           </p>
//           <p>
//             <b>Nama Instansi Retailer:</b> {batchData.retailer || "Data tidak tersedia"}
//           </p>
//         </div>
//       </div>
//     );
//   };

//   const renderHistoryNieTable = (historyNie) => {
//     if (!historyNie) {
//       return (
//         <div>
//           <h4>Riwayat NIE</h4>
//           <table>
//             <thead>
//               <tr>
//                 <th>Aktivitas</th>
//                 <th>Timestamp</th>
//                 <th>Hash</th>
//                 <th>Aksi</th>
//               </tr>
//             </thead>
//             <tbody>
//               <tr>
//                 <td colSpan="4" style={{ textAlign: "center" }}>
//                   Data belum tersedia
//                 </td>
//               </tr>
//             </tbody>
//           </table>
//         </div>
//       );
//     }

//     const nieEntries = [
//       {
//         key: 'request',
//         displayName: 'Pengajuan NIE',
//         hash: historyNie.requestHash,
//         timestamp: historyNie.requestTimestamp
//       },
//       {
//         key: 'createObat',
//         displayName: 'Pembuatan Obat',
//         hash: historyNie.createObatHash,
//         timestamp: historyNie.createObatTimestamp
//       },
//       {
//         key: 'approved',
//         displayName: 'Persetujuan NIE',
//         hash: historyNie.approvedHash,
//         timestamp: historyNie.approvedTimestamp
//       }
//     ].filter(entry => entry.hash);

//     return (
//       <div>
//         <h4>Riwayat NIE</h4>
//         <div className="nie-info">
//           <div className="field-group">
//             <label>Nomor NIE:</label>
//             <input 
//               type="text" 
//               value={historyNie.nieNumber || "Data tidak tersedia"} 
//               readOnly 
//             />
//           </div>
//           <div className="field-group">
//             <label>Instansi BPOM:</label>
//             <input 
//               type="text" 
//               value={historyNie.bpomInstance || "Data tidak tersedia"} 
//               readOnly 
//             />
//           </div>
//           <div className="field-group">
//             <label>IPFS CID:</label>
//             <input 
//               type="text" 
//               value={historyNie.ipfsCid || "Data tidak tersedia"} 
//               readOnly 
//             />
//           </div>
//         </div>
//         <table>
//           <thead>
//             <tr>
//               <th>Aktivitas</th>
//               <th>Timestamp</th>
//               <th>Hash</th>
//               <th>Aksi</th>
//             </tr>
//           </thead>
//           <tbody>
//             {nieEntries.length === 0 ? (
//               <tr>
//                 <td colSpan="4" style={{ textAlign: "center" }}>
//                   Data belum tersedia
//                 </td>
//               </tr>
//             ) : (
//               nieEntries.map((entry) => (
//                 <tr key={entry.key}>
//                   <td>{entry.displayName}</td>
//                   <td>{formatTimestamp(entry.timestamp)}</td>
//                   <td>{entry.hash || "Data tidak tersedia"}</td>
//                   <td>
//                     <button 
//                       className="copy" 
//                       onClick={() => navigator.clipboard.writeText(entry.hash || "Data tidak tersedia")}
//                     >
//                       Copy Hash
//                     </button>
//                     <button 
//                       className="view"
//                       onClick={() =>
//                         entry.hash && window.open(`https://etherscan.io/tx/${entry.hash}`, "_blank")
//                       }
//                     >
//                       Lihat di Etherscan
//                     </button>
//                   </td>
//                 </tr>
//               ))
//             )}
//           </tbody>
//         </table>
//       </div>
//     );
//   };

//   const renderCpotbCdobTable = (data, title) => {
//     if (!data) {
//       return (
//         <div>
//           <h4>{title}</h4>
//           <table>
//             <thead>
//               <tr>
//                 <th>Jenis</th>
//                 <th>Status</th>
//                 <th>Aktivitas</th>
//                 <th>Timestamp</th>
//                 <th>Hash</th>
//                 <th>Aksi</th>
//               </tr>
//             </thead>
//             <tbody>
//               <tr>
//                 <td colSpan="6" style={{ textAlign: "center" }}>
//                   Data belum tersedia
//                 </td>
//               </tr>
//             </tbody>
//           </table>
//         </div>
//       );
//     }

//     const getStatusText = (status) => {
//       switch(status) {
//         case 0: return "Menunggu";
//         case 1: return "Disetujui";
//         case 2: return "Ditolak";
//         default: return "Tidak diketahui";
//       }
//     };

//     const rows = [];
//     Object.entries(data).forEach(([jenis, info]) => {
//       const activities = [];
      
//       if (info.requestHash) {
//         activities.push({
//           activity: 'Pengajuan',
//           hash: info.requestHash,
//           timestamp: info.requestTimestamp
//         });
//       }
      
//       if (info.approvedHash) {
//         activities.push({
//           activity: 'Persetujuan',
//           hash: info.approvedHash,
//           timestamp: info.approvedTimestamp
//         });
//       }
      
//       if (info.rejectedHash) {
//         activities.push({
//           activity: 'Penolakan',
//           hash: info.rejectedHash,
//           timestamp: info.rejectedTimestamp
//         });
//       }
      
//       if (info.renewRequestHash) {
//         activities.push({
//           activity: 'Pengajuan Ulang',
//           hash: info.renewRequestHash,
//           timestamp: info.renewRequestTimestamp
//         });
//       }

//       if (activities.length === 0) {
//         rows.push({
//           jenis,
//           status: getStatusText(info.status),
//           activity: 'Tidak ada aktivitas',
//           timestamp: null,
//           hash: null
//         });
//       } else {
//         activities.forEach((activity, index) => {
//           rows.push({
//             jenis: index === 0 ? jenis : '',
//             status: index === 0 ? getStatusText(info.status) : '',
//             activity: activity.activity,
//             timestamp: activity.timestamp,
//             hash: activity.hash
//           });
//         });
//       }
//     });

//     return (
//       <div>
//         <h4>{title}</h4>
//         <table>
//           <thead>
//             <tr>
//               <th>Jenis</th>
//               <th>Status</th>
//               <th>Aktivitas</th>
//               <th>Timestamp</th>
//               <th>Hash</th>
//               <th>Aksi</th>
//             </tr>
//           </thead>
//           <tbody>
//             {rows.length === 0 ? (
//               <tr>
//                 <td colSpan="6" style={{ textAlign: "center" }}>
//                   Data belum tersedia
//                 </td>
//               </tr>
//             ) : (
//               rows.map((row, index) => (
//                 <tr key={index}>
//                   <td>{row.jenis}</td>
//                   <td>{row.status}</td>
//                   <td>{row.activity}</td>
//                   <td>{row.timestamp ? formatTimestamp(row.timestamp) : "Data tidak tersedia"}</td>
//                   <td>{row.hash || "Data tidak tersedia"}</td>
//                   <td>
//                     {row.hash && (
//                       <>
//                         <button 
//                           className="copy"
//                           onClick={() => navigator.clipboard.writeText(row.hash)}
//                         >
//                           Copy Hash
//                         </button>
//                         <button 
//                           className="view"
//                           onClick={() => window.open(`https://etherscan.io/tx/${row.hash}`, "_blank")}
//                         >
//                           Lihat di Etherscan
//                         </button>
//                       </>
//                     )}
//                   </td>
//                 </tr>
//               ))
//             )}
//           </tbody>
//         </table>
//       </div>
//     );
//   };

//   return (
//     <div id="publicObat" className="txHash">
//       <div className="container">
//         <div className="data-obat">
//           <div className="section">
//             <div className="form-container">
//               <form
//                 className="register-form"
//                 onSubmit={(e) => {
//                   e.preventDefault();
//                   fetchDocuments();
//                 }}
//               >
//                 <h3>Riwayat Hash Transaksi</h3>
//                 <div className="group">
//                   <input
//                     type="text"
//                     placeholder="Masukan nama instansi (ex: PT. Lorem Ipsum)"
//                     value={instanceName}
//                     onChange={(e) => setInstanceName(e.target.value)}
//                     required
//                   />
//                   <button type="submit">Cari</button>
//                 </div>
//               </form>
//             </div>

//             {/* Instance Information */}
//             {instanceData && (
//               <div className="instance-info">
//                 <h3>Informasi Instansi</h3>
//                 <div className="info-fields">
//                   <div className="field-group">
//                     <label>Nama Instansi:</label>
//                     <input 
//                       type="text" 
//                       value={instanceName || "Data tidak tersedia"} 
//                       readOnly 
//                     />
//                   </div>
//                   <div className="field-group">
//                     <label>Role:</label>
//                     <input 
//                       type="text" 
//                       value={instanceData.role || "Data tidak tersedia"} 
//                       readOnly 
//                     />
//                   </div>
//                   <div className="field-group">
//                     <label>NIB:</label>
//                     <input 
//                       type="text" 
//                       value={instanceData.userNib || "Data tidak tersedia"} 
//                       readOnly 
//                     />
//                   </div>
//                   <div className="field-group">
//                     <label>Lokasi:</label>
//                     <input 
//                       type="text" 
//                       value={instanceData.userLocation || "Data tidak tersedia"} 
//                       readOnly 
//                     />
//                   </div>
//                   <div className="field-group">
//                     <label>Alamat Wallet:</label>
//                     <input 
//                       type="text" 
//                       value={instanceData.userAddr || "Data tidak tersedia"} 
//                       readOnly 
//                     />
//                   </div>
//                 </div>
//               </div>
//             )}

//             {/* Medicine Selection for Pabrik */}
//             {instanceData?.role === 'Pabrik' && (
//               <div className="document-selection">
//                 <h3>Silahkan Pilih Produk Obat Tradisional</h3>
//                 <select
//                   value={selectedDocument}
//                   onChange={(e) => {
//                     setSelectedDocument(e.target.value);
//                     fetchBatchData(e.target.value);
//                     fetchTxObatData(e.target.value);
//                     setSelectedBatch("");
//                     setSelectedBatchDetails(null);
//                   }}
//                 >
//                   <option value="" disabled>
//                     Pilih Nama Obat
//                   </option>
//                   {obatName.map((doc) => (
//                     <option key={doc} value={doc}>
//                       {doc}
//                     </option>
//                   ))}
//                 </select>
//               </div>
//             )}

//             {/* Medicine Details */}
//             {selectedObatDetails && (
//               <div className="obat-details">
//                 <h3>Detail Obat</h3>
//                 <div className="info-fields">
//                   <div className="field-group">
//                     <label>Jenis Sediaan:</label>
//                     <input 
//                       type="text" 
//                       value={selectedObatDetails.jenisSediaan || "Data tidak tersedia"} 
//                       readOnly 
//                     />
//                   </div>
//                   <div className="field-group">
//                     <label>Tipe Obat:</label>
//                     <input 
//                       type="text" 
//                       value={selectedObatDetails.tipeObat || "Data tidak tersedia"} 
//                       readOnly 
//                     />
//                   </div>
//                   <div className="field-group">
//                     <label>Status:</label>
//                     <input 
//                       type="text" 
//                       value={selectedObatDetails.status === 1 ? "Aktif" : "Tidak Aktif"} 
//                       readOnly 
//                     />
//                   </div>
//                 </div>
//               </div>
//             )}

//             {/* Batch Selection */}
//             {batchData && batchData.length > 0 && (
//               <div className="batch-selection">
//                 <h3>Silahkan Pilih Batch</h3>
//                 <select
//                   value={selectedBatch}
//                   onChange={(e) => fetchBatchDetails(e.target.value)}
//                 >
//                   <option value="" disabled>
//                     Pilih Batch
//                   </option>
//                   {batchData.map((batch) => (
//                     <option key={batch.batchName} value={batch.batchName}>
//                       {batch.batchName}
//                     </option>
//                   ))}
//                 </select>
//               </div>
//             )}

//             {/* Document Details */}
//             <div className="document-details">
//               <hr />
//               <h3>Data Transaksi</h3>
              
//               {/* CPOTB Data for Pabrik */}
//               {instanceData?.role === 'Pabrik' && (
//                 <div>
//                   {renderCpotbCdobTable(cpotbData, "Data CPOTB")}
//                 </div>
//               )}

//               {/* CDOB Data for PBF */}
//               {instanceData?.role === 'PBF' && (
//                 <div>
//                   {renderCpotbCdobTable(cdobData, "Data CDOB")}
//                 </div>
//               )}

//               {/* NIE History */}
//               {selectedObatDetails?.historyNie && (
//                 <div>
//                   {renderHistoryNieTable(selectedObatDetails.historyNie)}
//                 </div>
//               )}

//               {/* Medicine Transaction Data */}
//               {renderTable(txObatData, "Data Transaksi Obat")}

//               {/* Batch Details */}
//               {selectedBatchDetails && (
//                 <div>
//                   {renderBatchTable(selectedBatchDetails)}
//                 </div>
//               )}

//               {/* Show empty batch table if no batch selected */}
//               {!selectedBatchDetails && instanceData?.role === 'Pabrik' && (
//                 <div>
//                   {renderBatchTable(null)}
//                 </div>
//               )}

//               {/* Show empty NIE table if no obat selected */}
//               {!selectedObatDetails?.historyNie && instanceData?.role === 'Pabrik' && (
//                 <div>
//                   {renderHistoryNieTable(null)}
//                 </div>
//               )}
//             </div>
//           </div>
//         </div>
//       </div>
//     </div>
//   );
// }

// export default CheckTransaction;


