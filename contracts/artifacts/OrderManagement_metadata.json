{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "roleManagerAddr",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "obatSharedAddr",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "cdobCertificateAddr",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "ReentrancyGuardReentrantCall",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "batchName",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "namaProduk",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "buyerInstanceName",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "sellerInstanceName",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "orderQuantity",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"name": "OrderUpdate",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "orderId",
						"type": "string"
					},
					{
						"internalType": "string[]",
						"name": "orderObatIpfs",
						"type": "string[]"
					}
				],
				"name": "acceptOrderPbf",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "orderId",
						"type": "string"
					},
					{
						"internalType": "string[]",
						"name": "orderObatIpfs",
						"type": "string[]"
					}
				],
				"name": "acceptOrderRetailer",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "allOrderIds",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "cdobCertificate",
				"outputs": [
					{
						"internalType": "contract CdobCertificate",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "orderId",
						"type": "string"
					},
					{
						"internalType": "string[]",
						"name": "orderObatIpfs",
						"type": "string[]"
					}
				],
				"name": "completeOrderPbf",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "orderId",
						"type": "string"
					},
					{
						"internalType": "string[]",
						"name": "orderObatIpfs",
						"type": "string[]"
					}
				],
				"name": "completeOrderRetailer",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "prevOrderIdPbf",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "orderId",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "obatId",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "batchName",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "namaProduk",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "buyerInstance",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "sellerInstance",
						"type": "string"
					},
					{
						"internalType": "uint8",
						"name": "orderQuantity",
						"type": "uint8"
					},
					{
						"internalType": "string",
						"name": "cdobHash",
						"type": "string"
					}
				],
				"name": "createOrder",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "orderId",
						"type": "string"
					}
				],
				"name": "detailOrder",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "orderId",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "obatId",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "namaProduk",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "batchName",
								"type": "string"
							},
							{
								"internalType": "uint8",
								"name": "orderQuantity",
								"type": "uint8"
							},
							{
								"components": [
									{
										"internalType": "string",
										"name": "instanceName",
										"type": "string"
									},
									{
										"internalType": "address",
										"name": "instanceAddr",
										"type": "address"
									}
								],
								"internalType": "struct OrderManagement.OrderUser",
								"name": "buyerUser",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "string",
										"name": "instanceName",
										"type": "string"
									},
									{
										"internalType": "address",
										"name": "instanceAddr",
										"type": "address"
									}
								],
								"internalType": "struct OrderManagement.OrderUser",
								"name": "sellerUser",
								"type": "tuple"
							},
							{
								"internalType": "enum EnumsLibrary.OrderStatus",
								"name": "statusOrder",
								"type": "uint8"
							},
							{
								"internalType": "string",
								"name": "prevOrderIdPbf",
								"type": "string"
							}
						],
						"internalType": "struct OrderManagement.OrderDetail",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "instanceName",
						"type": "string"
					}
				],
				"name": "getAllObatPbfByInstance",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "orderId",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "obatId",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "namaProduk",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "batchName",
								"type": "string"
							},
							{
								"internalType": "uint8",
								"name": "obatQuantity",
								"type": "uint8"
							},
							{
								"internalType": "enum EnumsLibrary.ObatAvailability",
								"name": "statusStok",
								"type": "uint8"
							},
							{
								"internalType": "string",
								"name": "ownerInstance",
								"type": "string"
							}
						],
						"internalType": "struct ObatShared.ObatOutputStok[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllObatPbfReadyStock",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "orderId",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "obatId",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "namaProduk",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "batchName",
								"type": "string"
							},
							{
								"internalType": "uint8",
								"name": "obatQuantity",
								"type": "uint8"
							},
							{
								"internalType": "enum EnumsLibrary.ObatAvailability",
								"name": "statusStok",
								"type": "uint8"
							},
							{
								"internalType": "string",
								"name": "ownerInstance",
								"type": "string"
							}
						],
						"internalType": "struct ObatShared.ObatOutputStok[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "instanceName",
						"type": "string"
					}
				],
				"name": "getAllObatRetailerByInstance",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "orderId",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "obatId",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "namaProduk",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "batchName",
								"type": "string"
							},
							{
								"internalType": "uint8",
								"name": "obatQuantity",
								"type": "uint8"
							},
							{
								"internalType": "enum EnumsLibrary.ObatAvailability",
								"name": "statusStok",
								"type": "uint8"
							},
							{
								"internalType": "string",
								"name": "ownerInstance",
								"type": "string"
							}
						],
						"internalType": "struct ObatShared.ObatOutputStok[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "buyerInstance",
						"type": "string"
					}
				],
				"name": "getAllOrderFromBuyer",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "orderId",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "obatId",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "namaProduk",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "batchName",
								"type": "string"
							},
							{
								"internalType": "uint8",
								"name": "orderQuantity",
								"type": "uint8"
							},
							{
								"components": [
									{
										"internalType": "string",
										"name": "instanceName",
										"type": "string"
									},
									{
										"internalType": "address",
										"name": "instanceAddr",
										"type": "address"
									}
								],
								"internalType": "struct OrderManagement.OrderUser",
								"name": "buyerUser",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "string",
										"name": "instanceName",
										"type": "string"
									},
									{
										"internalType": "address",
										"name": "instanceAddr",
										"type": "address"
									}
								],
								"internalType": "struct OrderManagement.OrderUser",
								"name": "sellerUser",
								"type": "tuple"
							},
							{
								"internalType": "enum EnumsLibrary.OrderStatus",
								"name": "statusOrder",
								"type": "uint8"
							},
							{
								"internalType": "string",
								"name": "prevOrderIdPbf",
								"type": "string"
							}
						],
						"internalType": "struct OrderManagement.OrderDetail[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "sellerInstance",
						"type": "string"
					}
				],
				"name": "getAllOrderFromSeller",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "orderId",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "obatId",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "namaProduk",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "batchName",
								"type": "string"
							},
							{
								"internalType": "uint8",
								"name": "orderQuantity",
								"type": "uint8"
							},
							{
								"components": [
									{
										"internalType": "string",
										"name": "instanceName",
										"type": "string"
									},
									{
										"internalType": "address",
										"name": "instanceAddr",
										"type": "address"
									}
								],
								"internalType": "struct OrderManagement.OrderUser",
								"name": "buyerUser",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "string",
										"name": "instanceName",
										"type": "string"
									},
									{
										"internalType": "address",
										"name": "instanceAddr",
										"type": "address"
									}
								],
								"internalType": "struct OrderManagement.OrderUser",
								"name": "sellerUser",
								"type": "tuple"
							},
							{
								"internalType": "enum EnumsLibrary.OrderStatus",
								"name": "statusOrder",
								"type": "uint8"
							},
							{
								"internalType": "string",
								"name": "prevOrderIdPbf",
								"type": "string"
							}
						],
						"internalType": "struct OrderManagement.OrderDetail[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "orderId",
						"type": "string"
					}
				],
				"name": "obatIpfs",
				"outputs": [
					{
						"internalType": "string[]",
						"name": "",
						"type": "string[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "obatShared",
				"outputs": [
					{
						"internalType": "contract ObatShared",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "orderId",
						"type": "string"
					}
				],
				"name": "orderTimestamp",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "timestampOrder",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "timestampShipped",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "timestampComplete",
								"type": "uint256"
							}
						],
						"internalType": "struct OrderManagement.OrderTimestamp",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "roleManager",
				"outputs": [
					{
						"internalType": "contract RoleManager",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"errors": {
				"ReentrancyGuardReentrantCall()": [
					{
						"details": "Unauthorized reentrant call."
					}
				]
			},
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/OrderManagement.sol": "OrderManagement"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
			"keccak256": "0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3",
			"license": "MIT",
			"urls": [
				"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a",
				"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA"
			]
		},
		"contracts/BaseCertificate.sol": {
			"keccak256": "0x34b33194b2507f147eb27456a426d7cbe29f6dd7da73be35dd9ceb66191f9e65",
			"license": "MIT",
			"urls": [
				"bzz-raw://d29a6115fb384ad5732ad1c68d6d4e48dde278daae52c8b7ed829616605bcf9e",
				"dweb:/ipfs/QmVbsuWf15vwP6FaT1xt7W9v3Dp1veVqTTK7wooaEgnWZh"
			]
		},
		"contracts/CdobCertificate.sol": {
			"keccak256": "0x2e1492543a08001bee435cb77281a4094d0548f9037c6efa3b451a2ac6c54c14",
			"license": "MIT",
			"urls": [
				"bzz-raw://b4a96265ed0eea38250316feb7b4573f22f54b9f7be24d9065a688ee5e50b687",
				"dweb:/ipfs/QmdkvpfT3nAN2xQipXeknoN5wHJYucrQ6cie8W9A7eSMcQ"
			]
		},
		"contracts/EnumsLibrary.sol": {
			"keccak256": "0x1a740b229e62312d4d231460a51990fe9a31b6682abb5223711f8f8e175662ac",
			"license": "MIT",
			"urls": [
				"bzz-raw://e157ce208bf0826d43a77eb6a5d72c03f5bd75a2e70b0d9788d155f4e99e99d7",
				"dweb:/ipfs/QmZGZUPNZJy61YuAaLxRA9zZLPS4XZ9zmfeycwU1gy4UFL"
			]
		},
		"contracts/ObatShared.sol": {
			"keccak256": "0x8bca7b67038c7425ee8b73534edaf3bf8484896eb783613c7b6f5a4fa7c08ebc",
			"license": "MIT",
			"urls": [
				"bzz-raw://40176900775d1becbbd8bf2a222d11ce3a62a37af83b04a949f2553c52bae4f8",
				"dweb:/ipfs/QmetimAHCd6G34E73QMD6naNFY5PfuBgqyUN3bBLBuRSD6"
			]
		},
		"contracts/OrderManagement.sol": {
			"keccak256": "0x4f2a9536c44c354494a79b4687c5e9775dafd9bc80b912abd89f16a7feb2e775",
			"license": "MIT",
			"urls": [
				"bzz-raw://bcc19613d0361114250229c953ccdb9f04bfcc8ecd541d901bc894c86180e1ec",
				"dweb:/ipfs/QmRhidp1AUt7vsPFWb5XYQ82oHMSSSPCNi2R8Q1VQX4kG5"
			]
		},
		"contracts/RoleManager.sol": {
			"keccak256": "0x9a8eb47465aeffe88b91dc20bd14bc917dc9e88c377e371d5f0f5ce046284f3b",
			"license": "MIT",
			"urls": [
				"bzz-raw://c635b3ff886182ade38749bf724b0cfbf35cebff598fd322e54d38b27306788f",
				"dweb:/ipfs/QmaHxKwdkcAhFgrTDmqxZusyeTcZwsYpV1TQB59uMwcRDd"
			]
		}
	},
	"version": 1
}